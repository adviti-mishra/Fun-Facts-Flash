{"ast":null,"code":"var _jsxFileName = \"/Users/advitimishra/Documents/Personal Projects/TIL_app/src/components/NewFactForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { CATEGORIES } from \"../constants/categories\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewFactForm({\n  setFacts,\n  setShowForm\n}) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  function handleSubmit(e) {\n    // Prevent the page from reloading whenever we submit a form\n    e.preventDefault();\n    // Check if data is valid\n    if (text && source && category && text.length <= 200) {\n      // Creare a new fact object\n      const newFact = {\n        id: Math.round(Math.random() * 100000000),\n        text,\n        source,\n        category,\n        createdIn: 2021\n      };\n\n      // Add the fact to state\n      setFacts(facts => [newFact, ...facts]);\n\n      // Reset input fields\n      setText(\"\");\n      setSource(\"\");\n      setCategory(\"\");\n\n      // Close the form automatically\n\n      setShowForm(false);\n    }\n  }\n  const textLength = text.length;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"fact-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Share a fact...\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: 200 - textLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: source,\n      type: \"text\",\n      placeholder: \"Source\",\n      onChange: e => setSource(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setCategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        id: cat.name,\n        value: cat.name,\n        children: cat.name.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-large\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(NewFactForm, \"peGKo5XaPmH+Prgp8Pua3IENBLg=\");\n_c = NewFactForm;\nexport default NewFactForm;\nvar _c;\n$RefreshReg$(_c, \"NewFactForm\");","map":{"version":3,"names":["React","useState","CATEGORIES","jsxDEV","_jsxDEV","NewFactForm","setFacts","setShowForm","_s","text","setText","source","setSource","category","setCategory","handleSubmit","e","preventDefault","length","newFact","id","Math","round","random","createdIn","facts","textLength","className","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","name","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/advitimishra/Documents/Personal Projects/TIL_app/src/components/NewFactForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { CATEGORIES } from \"../constants/categories\";\n\nfunction NewFactForm({ setFacts, setShowForm }) {\n  const [text, setText] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n\n  function handleSubmit(e) {\n    // Prevent the page from reloading whenever we submit a form\n    e.preventDefault();\n    // Check if data is valid\n    if (text && source && category && text.length <= 200) {\n      // Creare a new fact object\n      const newFact = {\n        id: Math.round(Math.random() * 100000000),\n        text,\n        source,\n        category,\n        createdIn: 2021,\n      };\n\n      // Add the fact to state\n      setFacts((facts) => [newFact, ...facts]);\n\n      // Reset input fields\n      setText(\"\");\n      setSource(\"\");\n      setCategory(\"\");\n\n      // Close the form automatically\n\n      setShowForm(false);\n    }\n  }\n\n  const textLength = text.length;\n\n  return (\n    <form className=\"fact-form\" onSubmit={handleSubmit}>\n      {/* CONTROLLED COMPONENT \n        (react has full control of the input field)\n        e - element object\n        e.target : current element \n        */}\n      <input\n        type=\"text\"\n        placeholder=\"Share a fact...\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <span>{200 - textLength}</span>\n      <input\n        value={source}\n        type=\"text\"\n        placeholder=\"Source\"\n        onChange={(e) => setSource(e.target.value)}\n      />\n      <select value={category} onChange={(e) => setCategory(e.target.value)}>\n        <option value=\"\">Choose Category</option>\n        {CATEGORIES.map((cat) => (\n          <option id={cat.name} value={cat.name}>\n            {cat.name.toUpperCase()}\n          </option>\n        ))}\n      </select>\n      <button className=\"btn btn-large\">Post</button>\n    </form>\n  );\n}\n\nexport default NewFactForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}